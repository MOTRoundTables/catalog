source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.1"
# Create a json file from the excel meta
metaxls2json(dr, fl)
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Create a json file from the excel meta
metaxls2json(dr, fl)
Sys.setlocale(locale="hebrew")
Sys.setlocale(locale="hebrew")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Create a json file from the excel meta
metaxls2json(dr, fl)
# read meta json
meta = getjsonmeta(dr, fl)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Create a json file from the excel meta
metaxls2json(dr, fl)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Create a json file from the excel meta
metaxls2json(dr, fl)
# read meta json
meta = getjsonmeta(dr, fl)
tellmeta(meta)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
source("metalib.R")
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
source("metalib.R")
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
source("metalib.R")
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
source("metalib.R")
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
tellmeta(meta)
keys = colnames(meta)
keys = names(meta)
setdiff(keys,hdr_required)
hdr_required = c("Publisher", "Contact", "Title", "Description", "Keywords",
"Created", "Last updated", "Temporal coverage", "Spatial coverage",
"Dataset file", "Metadata creation date")
setdiff(keys,hdr_required)
setdiff(hdr_required,keys)
hdr_required = c("Publisher", "Contact", "Title", "Description", "Keywords",
"Created", "Last updated", "Temporal coverage", "Spatial coverage",
"Dataset file", "Metadata creation date")
keys = names(meta)
missing1 = setdiff(hdr_required,keys)
hdr_required = c( "Contact", "Title", "Description", "Keywords",
"Created", "Last updated", "Temporal coverage", "Spatial coverage",
"Dataset file", "Metadata creation date")
keys = names(meta)
missing1 = setdiff(hdr_required,keys)
length(missing1)
hdr_required = c("Publisher", "Contact", "Title", "Description", "Keywords",
"Created", "Last updated", "Temporal coverage",
"Spatial coverage", "Dataset file", "Metadata creation date")
keys = names(meta)
missing1 = setdiff(hdr_required,keys)
if (length(missing1)>0) {
print("missing required keywords in header:")
}
missing1
print(paste("missing required keywords in header:", missing1))
tellmeta(meta)
source("metalib.R")
chkmetakeys(meta)
# Convert List to string
li <- list('A','B','C','D','E','F')
paste(li,collapse = ' ')
paste("hi", li,collapse = ' ')
# Using toString()
toString(li)
# using do.call()
do.call(paste, c(li, collapse = " "))
# using do.call()
do.call(paste, c("hi", li, collapse = " "))
# Load stringi
library('stringi')
stri_paste(unlist(li), collapse='')
stri_paste(unlist(li), collapse=' ' )
missing2 = setdiff(files_required,keys)
hdr_required = c("Publisher", "Contact", "Title", "Description", "Keywords",
"Created", "Last updated", "Temporal coverage",
"Spatial coverage", "Dataset file", "Metadata creation date")
files_required = c("Files list", "Files")
keys = names(meta)
missing1 = setdiff(hdr_required,keys)
if (length(missing1)>0) {
print(paste("missing required keywords in header:", missing1))
}
missing2 = setdiff(files_required,keys)
if ((length(meta$"Files list")>0)&(length(missing2)>0)) {
print(paste("there are several files but missing in header:", missing2))
}
View(meta)
f1 = openmetafile(meta, 1)  # opens selected data file
metafields = getmetafilefields(meta, 1)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
# Read meta json (if do not exists it creates one from xlsx meta)
meta = getjsonmeta(dr, fl)
tellmeta(meta)
chkmetaheaderkeys(meta)
f1 = openmetafile(meta, 1)  # opens selected data file
metafields = getmetafilefields(meta, 1)
differences <- setdiff(filefields, metafields)
filefields = colnames(f1)
differences <- setdiff(filefields, metafields)
# -------------------------------------------------------
f1 = openmetafile(meta, 1)
View(f1)
f1 = null
rm(f1)
file = meta$Files[1]
keys = names(meta$Files[1])
keys = names(meta$Files[[1]])
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys
checkmetafilefields(meta) # check file field names
file_required_keys = c(  "File name", "File format", "File description", "File fields")
nfiles = length(meta$"Files list")
for (i in 1:nfiles) {
print(paste(i, ": check fields for ", meta$"Files list"[i], sep="" ))
keys = names(meta$Files[[i]])
missing1 = setdiff(file_required_keys,keys)
if (length(missing1)>0) {
print(paste("Missing required keywords in header:", missing1))
}
f1 = openmetafile(meta, i)  # opens selected data file
metafields = getmetafilefields(meta, i)
filefields = colnames(f1)
differences <- setdiff(filefields, metafields)
if (length(missing1)>0) {
print(paste("discrepacies if meta and file field names:", missing1))
}
}
nfiles = length(meta$"Files list")
#for (i in 1:nfiles) {
i = 1
print(paste(i, ": check fields for ", meta$"Files list"[i], sep="" ))
keys = names(meta$Files[[i]])
missing1 = setdiff(file_required_keys,keys)
if (length(missing1)>0) {
print(paste("Missing required keywords in header:", missing1))
}
f1 = openmetafile(meta, i)  # opens selected data file
metafields = getmetafilefields(meta, i)
filefields = colnames(f1)
differences <- setdiff(filefields, metafields)
if (length(differences)>0) {
print(paste("discrepacies if meta and file field names:", missing1))
}
differences <- setdiff(metafields, filefields)
if (length(differences)>0) {
print(paste("discrepacies if meta and file field names:", missing1))
}
if (length(differences)>0) {
print(paste("discrepacies if meta and file field names:", differences))
}
differences <- setdiff(filefields, metafields)
if (length(differences)>0) {
print(paste("discrepacies if meta and file field names:", differences))
}
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys
checkmetafilefields(meta) # check file field names
f1 = openmetafile(meta, 1)  # opens selected data file
head(f1)
#head(f1)
summary(f1)
library(skimr)
install.package(skimr)
install.packages("skimr")
library(skimr)
skim(f1)
skim(f1) %>%
summary()
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
f1 = openmetafile(meta, 2)
skim(f1)
f1 = openmetafile(meta, 2)
skim(f1) %>%
summary()
#head(f1)
#summary(f1)
skim(f1) %>%
summary()
xxx <- function() {
f1 = openmetafile(meta, 1)  # opens selected data file
#head(f1)
#summary(f1)
skim(f1) %>%
summary()
}
xxx
x = skim(f1) %>%
summary()
x
print(x)
f1 = openmetafile(meta, 1)  # opens selected data file
xxx <- function() {
f1 = openmetafile(meta, 1)  # opens selected data file
#head(f1)
#summary(f1)
x = skim(f1) %>%
summary()
print(x)
}
xxx
cat(x)
source("~/.active-rstudio-document")
xxx
xxx <- function() {
f1 = openmetafile(meta, 1)  # opens selected data file
#head(f1)
#summary(f1)
x = skim(f1) %>%
summary()
return(x)
}
y = xxx
xxx <- function() {
f1 = openmetafile(meta, 1)  # opens selected data file
#head(f1)
#summary(f1)
x = skim(f1) %>%
summary()
return(x)
}
y = xxx()
print(y)
xxx <- function() {
#f1 = openmetafile(meta, 1)  # opens selected data file
#head(f1)
#summary(f1)
x = skim(f1) %>%
summary()
return(x)
}
yyy <- function() {
y = xxx()
print(y)
}
yyy
yyy()
xxx()
rm(f1)
rm(x,y,xxx,yyy)
checkmetafilefields(meta) # check file field names
f1 = openmetafile(meta, 1)  # opens selected data file
xxx <- function() {
#head(f1)
#summary(f1)
x = skim(f1) %>%
summary()
return(x)
}
yyy <- function() {
y = xxx()
print(y)
}
xxx()
rm(f1)
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
con <- file(paste(dr,"checkmeta.txt",sep=""))
sink(con, append=TRUE)
sink(con, append=TRUE, type="message")
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# Restore output to console
sink()
sink(type="message")
print("done ...")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, TRUE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# Restore output to console
sink()
sink(type="message")
print("done ...")
check2file(dr, FALSE)
check2file(dr, FALSE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
check2file(dr, FALSE)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, FALSE)
source("metalib.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, FALSE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(file=NULL)
sink(file=NULL)
x = "a"
print(x)
print(x, quote=FALSE)
noquote(x, right = FALSE)
noquote(x, right = TRUE)
print.default(quote = FALSE)
print.default(x, quote = FALSE)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
print("check individual files", quote=FALSE)
print("check individual files\n", quote=FALSE)
print("\ncheck individual files", quote=FALSE)
print("\ncheck individual files\n", quote=FALSE)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
check2file(dr, TRUE) # creates "checkmeta.txt" in dr. FALSE to console
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(type = c("output", "message"))
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/razon/"
fl = "Metadata-National_Satisfaction_Public_Transport"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/razon/"
fl = "Metadata-National_Satisfaction_Public_Transport"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
chkmetaheaderkeys(meta) # check required keys in header are present
sink(type = c("output", "message"))
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
checkmetafilefields(meta) # check file field names
f1 = openmetafile(meta, 1)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
View(meta)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
View(meta)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
sink(type = c("output", "message"))
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# open selected file
f1 = openmetafile(meta, 1)  # opens selected data file
View(f1)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# open selected file
f1 = openmetafile(meta, 1)  # opens selected data file
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(type = c("output", "message"))
# catalog tools - ver. 0.1
source("metalib.R")
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Obstruction in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
