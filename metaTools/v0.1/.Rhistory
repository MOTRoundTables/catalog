summary()
return(x)
}
yyy <- function() {
y = xxx()
print(y)
}
xxx()
rm(f1)
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
con <- file(paste(dr,"checkmeta.txt",sep=""))
sink(con, append=TRUE)
sink(con, append=TRUE, type="message")
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# Restore output to console
sink()
sink(type="message")
print("done ...")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, TRUE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# Restore output to console
sink()
sink(type="message")
print("done ...")
check2file(dr, FALSE)
check2file(dr, FALSE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
check2file(dr, FALSE)
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, FALSE)
source("metalib.R")
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
check2file(dr, FALSE)
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(file=NULL)
sink(file=NULL)
x = "a"
print(x)
print(x, quote=FALSE)
noquote(x, right = FALSE)
noquote(x, right = TRUE)
print.default(quote = FALSE)
print.default(x, quote = FALSE)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
print("check individual files", quote=FALSE)
print("check individual files\n", quote=FALSE)
print("\ncheck individual files", quote=FALSE)
print("\ncheck individual files\n", quote=FALSE)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
check2file(dr, TRUE) # creates "checkmeta.txt" in dr. FALSE to console
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
checkmetafilefields(meta) # check file field names
source("metalib.R")
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(type = c("output", "message"))
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/razon/"
fl = "Metadata-National_Satisfaction_Public_Transport"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/razon/"
fl = "Metadata-National_Satisfaction_Public_Transport"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
chkmetaheaderkeys(meta) # check required keys in header are present
sink(type = c("output", "message"))
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
checkmetafilefields(meta) # check file field names
f1 = openmetafile(meta, 1)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
View(meta)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
View(meta)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/pubopinion/"
fl = "Metadata-Public_opinion_on_public_transportation_Survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
sink(type = c("output", "message"))
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# open selected file
f1 = openmetafile(meta, 1)  # opens selected data file
View(f1)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# open selected file
f1 = openmetafile(meta, 1)  # opens selected data file
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
sink(type = c("output", "message"))
# catalog tools - ver. 0.1
source("metalib.R")
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Obstruction in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
# catalog tools - ver. 0.1
source("metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/amit/obstru/"
fl = "Metadata-Barriers in public transportation survey_2021"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# catalog tools - ver. 0.1
source("metaTools/v0.1/metalib.R")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
check2file(dr, fl, FALSE) # creates "checkmeta.txt" in dr. FALSE to console
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
check2file(dr, fl, FALSE) # creates "checkmeta.txt" in dr. FALSE to console
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
View(f1)
View(f1)
View(f1)
View(f1)
f1@headline
f1$headline
View(meta)
View(f1)
f2 = f1$readfile
View(f2)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
# open selected file
f1 = getmetafile(meta, 1)  # opens selected data file
View(f1)
x = colnames(f1)
x
encoding <- Encoding(f1)
print(encoding)
encoding <- Encoding(f1)
info <- file(paste(dr, fl, ".csv", sep=""), open = "rb")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl = "tourist_meta_0.2"
ff = paste(dr, fl, ".csv", sep="")
info <- file(ff, open = "rb")
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
fl1 = "individual tourist details"
ff = paste(dr, fl1, ".csv", sep="")
info <- file(ff, open = "rb")
encoding <- info$encoding
info
info$mode
info@mode
library(readr)
df <- read_csv(ff, encoding = "UTF-8")
df <- read_csv(ff)
View(df)
View(f1)
View(f1)
library(readxl)
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
View(f1)
View(f1)
# open selected file
f1 = openmetafile(meta, 2)  # opens selected data file
View(f1)
x = colnames(f1)
x
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
spec()
spec(f1)
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") דפקב# this is the working dir ? isn't ir
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
startrepfile()
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
startrepfile()
rep <- NULL # a list of report lines
startrepfile()
startrepfile <- function(dr, fl, option) {
rep <<- c()
}
startrepfile()
rep <- NULL # a list of report lines
startrepfile <- function(dr, fl, option) {
rep <<- c('sss')
}
startrepfile()
rep <- NULL # a list of report lines
startrepfile <- function(dr, fl, option) {
rep <- c('sss')
}
startrepfile()
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%a %b %d")
rep <- NULL # a list of report lines
startrepfile <- function(dr, fl, option) {
rep <<- c('meta tools report', format(Sys.time(), "%a %b %d")) # "%a %b %d %X %Y"
}
addrep <- function(s, lines_before, lines_after) {
for (i in 1:lines_before) { s = c("", s) }
for (i in 1:lines_after) { s = c(s, "") }
rep <<- c(rep, s)
}
startrepfile()
addrep("bla")
addrep <- function(s, lines_before=0, lines_after=0) {
for (i in 1:lines_before) { s = c("", s) }
for (i in 1:lines_after) { s = c(s, "") }
rep <<- c(rep, s)
}
startrepfile()
addrep("bla")
rep
writelines(rep)
writeLines(rep)
rep <- NULL # a list of report lines
startrepfile <- function(dr, fl, option) {
rep <<- c('meta tools report', format(Sys.time(), "%a %b %d")) # "%a %b %d %X %Y"
}
addrep <- function(s, lines_before=0, lines_after=0) {
# for (i in 1:lines_before) { s = c("", s) }
# for (i in 1:lines_after) { s = c(s, "") }
rep <<- c(rep, s)
}
startrepfile()
addrep("bla")
writeLines(rep)
startrepfile()
addrep("bla")
writeLines(rep)
startrepfile()
addrep("bla", 1)
writeLines(rep)
debugSource("~/GitHub/catalog/metaTools/v0.1/metalib.R")
addrep <- function(s, lines_before=0, lines_after=0) {
if (lines_before>0)  {
for (i in 1:lines_before) { s = c("", s) }
}
if (lines_after>0)  {
for (i in 1:lines_after) { s = c(s, "") }
}
rep <<- c(rep, s)
}
startrepfile()
addrep("bla", lines_after=3)
writeLines(rep)
source("~/GitHub/catalog/metaTools/v0.1/metalib.R")
debugSource("~/GitHub/catalog/metaTools/v0.1/metalib.R")
startrepfile()
addrep("bla", lines_after=3)
printrepfile()
printrepfile <- function(dr=NULL, fl=NULL, option) {
if ( is.null(dr) & is.null(fl) ) {
fil = file(paste(dr,"check_", fl, ".txt",sep=""))
writeLines(rep, fil)
} else {
writeLines(rep)
}
rep = NULL
}
startrepfile()
addrep("bla", lines_after=3)
printrepfile()
printrepfile(dr, fl)
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
startrepfile()
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
startrepfile()
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
print("done ...")
printrepfile(dr, fl)
printrepfile()
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
#source("metaTools/v0.1/metalib.R") # why ?
source("metalib.R") # this is the working dir ? isn't ir
dr = "C:/Users/marsz/Desktop/zvl/tmp24/Data/tayarut/tourism_2016_2017_0.2/"
# dr = "C:/Users/idshk/Downloads/OneDrive_2023-01-03/version 0.2/"
fl = "tourist_meta_0.2"
startrepfile()
meta = getjsonmeta(dr, fl) # read meta json (if not there create it from xlsx)
tellmeta(meta)  # show what is it about
chkmetaheaderkeys(meta) # check required keys in header are present
checkmetafilefields(meta) # check file field names
printrepfile(clear=FALSE)
printrepfile(clear=FALSE)
printrepfile(clear=FALSE)
printrepfile(dr, fl)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
skimr(f1)
x = skim(f1)
x
x = skim(f1) %>%
summary()
x
y = x %>% unlist()
y
x$data_rows
str(f1)
x = skim(f1) %>%
summary() %>%
tibble::as_tibble()
x = skim(f1) %>%
tibble::as_tibble()
View(x)
x = skim(f1) %>%
summary()
x
class(x)
print(x)
x
y = str(x)
y
a <- capture.output(print(x))
a
a[1]
print(a[1])
xx = a[1]
xx
print(xx)
print(my_string, quote = FALSE)
a <- capture.output(print(x, quote=FALSE))
a
print(a[1])
print(a[1], quote=FALSE)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
x = skim(f1) %>%
summary()
a <- capture.output(print(x, quote=FALSE))
a
print(a)
print(length(a))
a <- capture.output(print(x, quote=FALSE))
b = c()
for (i in 1:length(a)) {b = c(b, print(a[i], quote=FALSE) )}
b = c()
for (i in 1:length(a)) {b = c(b, a[i] )}
print(b)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/metalib.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
debugSource("~/GitHub/catalog/metaTools/v0.1/metalib.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
source("~/GitHub/catalog/metaTools/v0.1/metalib.R")
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
x$fl = a
x$fl = 1
x = array(list(), 10)
x[1]$dr = "aa"
x[[1]]$dr = "aa"
x[[1]$fl = "bb"
x = array(list(), 10)
x[[1]]$dr = "aa"
x[[1]]$fl = "bb"
source("~/GitHub/catalog/metaTools/v0.1/files_list.R")
# Please specify:
myfile = 7
dr = x[7]$dr #  the directory where the zip was opened
fl = x[7]$fl #  is the name of the meta-file (without file type -assumed .xlsx)
x[7]
x[7]$dr
x[[7]]$dr
# Please specify:
myfile = 7
dr = x[[myfile]]$dr #  the directory where the zip was opened
fl = x[[myfile]]$fl #  is the name of the meta-file (without file type -assumed .xlsx)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
View(f1)
# open selected file
f1 = openmetafile(meta, 1)  # opens selected data file
View(f1)
source("~/GitHub/catalog/metaTools/v0.1/check_meta.R")
